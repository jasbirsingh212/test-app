{"version":3,"sources":["components/card-list/card-list.js","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","monsters","className","map","monster","name","id","email","hoverable","src","alt","width","Search","Input","App","handleNameChange","setState","firstName","onSearch","value","filterMonster","state","filter","toLowerCase","includes","searchInput","fetch","then","response","json","data","this","placeholder","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAuBeA,EAnBE,SAACC,GAChB,IAAQC,EAAaD,EAAbC,SAER,OACE,qBAAKC,UAAU,YAAf,SACGD,EAASE,KAAI,SAACC,GACb,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAClB,OACE,eAAC,IAAD,CAAgBC,WAAS,EAAzB,UACE,qBAAKC,IAAG,+BAA0BH,EAA1B,aAAyCI,IAAI,UAAUC,MAAM,QACrE,6BAAKN,IACL,4BAAIE,MAHMD,SCLdM,EAAWC,IAAXD,OAiDOE,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAaFC,iBAAmB,WAEjB,EAAKC,SAAS,CAAEC,UAAW,SAhBf,EAmBdC,SAAW,SAACC,GACV,IACMC,EADe,EAAKC,MAAlBpB,SACuBqB,QAAQ,SAAAlB,GAEnC,GADiBA,EAATC,KACAkB,cAAcC,SAASL,EAAMI,eACnC,OAAOnB,KAGb,EAAKY,SAAS,CAAEI,gBAAeK,YAAcN,KAzB7C,EAAKE,MAAQ,CACXpB,SAAU,GACVwB,YAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKd,SAAS,CAAEf,SAAU6B,S,oBAmB9C,WACE,MAAoCC,KAAKV,MAAjCpB,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,cAClB,OACE,sBAAKlB,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,6BACA,cAACU,EAAD,CACEoB,YAAY,qBACZd,SAAUa,KAAKb,SACfhB,UAAU,iBAEZ,cAAC,EAAD,CAAUD,SAAUmB,GAAgCnB,W,GAzC1CgC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75cfd4d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport { Card } from \"antd\";\r\n\r\nconst CardList = (props) => {\r\n  const { monsters } = props;\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => {\r\n        const { name, id, email } = monster;\r\n        return (\r\n          <Card  key={id} hoverable>\r\n            <img src={`https://robohash.org/${id}?set=set2`} alt=\"monster\" width='70%'/>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","// @ts-ignore\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Input } from \"antd\";\nimport CardList from \"./components/card-list/card-list\";\n\nconst { Search } = Input;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchInput : ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n\n  handleNameChange = () => {\n    // this.setState({...this.state, firstName: 'Jas'})\n    this.setState({ firstName: \"Jas\" });\n  };\n\n  onSearch = (value) => {\n    const { monsters } = this.state;\n    const filterMonster = monsters.filter( monster => {\n        const { name } = monster;\n        if(name.toLowerCase().includes(value.toLowerCase())){\n          return monster;\n        }\n    })\n    this.setState({ filterMonster, searchInput : value })\n  };\n\n  render() {\n    const { monsters, filterMonster } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 className='center'>Monster Rolodex</h1>\n        <Search\n          placeholder=\"Search for monster\"\n          onSearch={this.onSearch}\n          className=\"search-input\"\n        />\n        <CardList monsters={filterMonster ? filterMonster : monsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}